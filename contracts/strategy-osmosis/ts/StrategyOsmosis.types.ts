/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  automate_superfluid: boolean;
  base_denom: string;
  chain_id: string;
  controller_deposit_denom: string;
  controller_transfer_channel_id: string;
  extern_tokens: ExternToken[];
  lp_denom: string;
  pool_id: number;
  quote_denom: string;
  superfluid_validator: string;
  transfer_channel_id: string;
  transfer_timeout: number;
  unbond_period: number;
}
export interface ExternToken {
  extern_token: string;
  swap_in_route: SwapAmountInRoute[];
}
export interface SwapAmountInRoute {
  pool_id: number;
  token_out_denom: string;
  [k: string]: unknown;
}
export type ExecuteMsg = {
  update_config: UpdateConfigMsg;
} | {
  stake: StakeMsg;
} | {
  unstake: UnstakeMsg;
} | {
  superfluid_delegate: ExecuteSuperfluidDelegateMsg;
} | {
  execute_epoch: ExecuteEpochMsg;
};
export type DepositToken = "base" | "quote";
export type Phase = "deposit" | "withdraw";
export type PhaseStep = "ibc_transfer_to_host" | "ibc_transfer_to_host_callback" | "request_icq_after_ibc_transfer_to_host" | "response_icq_after_ibc_transfer_to_host" | "sell_extern_tokens" | "sell_extern_tokens_callback" | "request_icq_after_sell_extern_tokens" | "response_icq_after_sell_extern_tokens" | "add_liquidity" | "add_liquidity_callback" | "bond_liquidity" | "bond_liquidity_callback" | "request_icq_after_bond_liquidity" | "response_icq_after_bond_liquidity" | "begin_unbonding_for_pending_requests" | "begin_unbonding_for_pending_requests_callback" | "check_matured_unbondings" | "remove_liquidity" | "remove_liquidity_callback" | "request_icq_after_remove_liquidity" | "response_icq_after_remove_liquidity" | "swap_two_tokens_to_deposit_token" | "swap_two_tokens_to_deposit_token_callback" | "request_icq_after_swap_two_tokens_to_deposit_token" | "response_icq_after_swap_two_tokens_to_deposit_token" | "ibc_transfer_to_controller" | "ibc_transfer_to_controller_callback" | "request_icq_after_ibc_transfer_to_controller" | "response_icq_after_ibc_transfer_to_controller" | "distribute_to_unbonded_users";
export type Uint128 = string;
export interface UpdateConfigMsg {
  automate_superfluid?: boolean | null;
  base_denom?: string | null;
  chain_id?: string | null;
  controller_deposit_denom?: string | null;
  controller_transfer_channel_id?: string | null;
  deposit_token?: DepositToken | null;
  extern_tokens?: ExternToken[] | null;
  ica_channel_id?: string | null;
  lp_denom?: string | null;
  owner?: string | null;
  phase?: Phase | null;
  phase_step?: PhaseStep | null;
  pool_id?: number | null;
  quote_denom?: string | null;
  superfluid_validator?: string | null;
  transfer_channel_id?: string | null;
  transfer_timeout?: number | null;
  unbond_period?: number | null;
}
export interface StakeMsg {}
export interface UnstakeMsg {
  amount: Uint128;
}
export interface ExecuteSuperfluidDelegateMsg {}
export interface ExecuteEpochMsg {}
export type QueryMsg = {
  config: {};
} | {
  state: {};
} | {
  bonded: {
    addr: string;
  };
} | {
  unbonding: {
    addr: string;
  };
} | {
  fee: {};
} | {
  list_channels: {};
} | {
  channel: {
    id: string;
  };
} | {
  unbondings: {};
};
export interface ChannelResponse {
  info: ChannelInfo;
}
export interface ChannelInfo {
  address: string;
  connection_id: string;
  counterparty_endpoint: IbcEndpoint;
  id: string;
}
export interface IbcEndpoint {
  channel_id: string;
  port_id: string;
  [k: string]: unknown;
}
export type Addr = string;
export interface Config {
  automate_superfluid: boolean;
  base_denom: string;
  chain_id: string;
  controller_deposit_denom: string;
  controller_transfer_channel_id: string;
  deposit_token: DepositToken;
  extern_tokens: ExternToken[];
  ica_account: string;
  ica_channel_id: string;
  ica_connection_id: string;
  lp_denom: string;
  owner: Addr;
  phase: Phase;
  phase_step: PhaseStep;
  pool_id: number;
  quote_denom: string;
  superfluid_validator: string;
  transfer_channel_id: string;
  transfer_timeout: number;
  unbond_period: number;
}
export type Decimal = string;
export interface FeeInfo {
  deposit_fee_rate: Decimal;
  interest_fee_rate: Decimal;
  withdraw_fee_rate: Decimal;
}
export interface ListChannelsResponse {
  channels: ChannelInfo[];
}
export interface State {
  bonded_lp_amount: Uint128;
  controller_free_amount: Uint128;
  controller_pending_transfer_amount: Uint128;
  controller_stacked_amount_to_deposit: Uint128;
  extern_token_amounts: Uint128[];
  free_base_amount: Uint128;
  free_lp_amount: Uint128;
  free_quote_amount: Uint128;
  last_unbonding_id: number;
  lock_id: number;
  lp_redemption_rate: Uint128;
  pending_bond_lp_amount: Uint128;
  pending_icq: number;
  pending_lp_removal_amount: Uint128;
  redemption_rate: Uint128;
  total_deposit: Uint128;
  total_shares: Uint128;
  total_withdrawn: Uint128;
  unbonding_lp_amount: Uint128;
}
export type ArrayOfUnbonding = Unbonding[];
export interface Unbonding {
  amount: Uint128;
  id: number;
  marked: boolean;
  pending_start: boolean;
  sender: Addr;
  start_time: number;
}