{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "State",
  "type": "object",
  "required": [
    "bonded_lp_amount",
    "controller_free_amount",
    "controller_pending_transfer_amount",
    "controller_stacked_amount_to_deposit",
    "extern_token_amounts",
    "free_base_amount",
    "free_lp_amount",
    "free_quote_amount",
    "last_unbonding_id",
    "lock_id",
    "lp_redemption_rate",
    "pending_bond_lp_amount",
    "pending_icq",
    "pending_lp_removal_amount",
    "redemption_rate",
    "total_deposit",
    "total_shares",
    "total_withdrawn",
    "unbonding_lp_amount"
  ],
  "properties": {
    "bonded_lp_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "controller_free_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "controller_pending_transfer_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "controller_stacked_amount_to_deposit": {
      "$ref": "#/definitions/Uint128"
    },
    "extern_token_amounts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Uint128"
      }
    },
    "free_base_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "free_lp_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "free_quote_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "last_unbonding_id": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "lock_id": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "lp_redemption_rate": {
      "$ref": "#/definitions/Uint128"
    },
    "pending_bond_lp_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "pending_icq": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "pending_lp_removal_amount": {
      "$ref": "#/definitions/Uint128"
    },
    "redemption_rate": {
      "$ref": "#/definitions/Uint128"
    },
    "total_deposit": {
      "$ref": "#/definitions/Uint128"
    },
    "total_shares": {
      "$ref": "#/definitions/Uint128"
    },
    "total_withdrawn": {
      "$ref": "#/definitions/Uint128"
    },
    "unbonding_lp_amount": {
      "$ref": "#/definitions/Uint128"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
